# Generated by Django 2.1.7 on 2019-04-15 12:12

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Apply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=20, verbose_name='邮箱')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('text', models.TextField(max_length=1000, verbose_name='内容')),
                ('time', models.DateField(verbose_name='申请时间')),
                ('statu', models.SmallIntegerField(choices=[(1, '通过'), (-1, '未通过'), (0, '未处理')], default=0, verbose_name='状态')),
                ('name', models.CharField(default='无', max_length=10, verbose_name='申请人姓名')),
            ],
            options={
                'verbose_name': '申请',
                'verbose_name_plural': '申请',
                'permissions': (('view_task', '查看权限'), ('change_task', '修改权限')),
            },
        ),
        migrations.CreateModel(
            name='ApplyInstrumentList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Apply_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Apply', verbose_name='申请')),
            ],
            options={
                'verbose_name': '申请对应仪器表',
                'verbose_name_plural': '申请对应仪器表',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='学院名称')),
            ],
            options={
                'verbose_name': '学院',
                'verbose_name_plural': '学院',
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(default='', max_length=100, verbose_name='编号')),
                ('name', models.CharField(max_length=500, verbose_name='仪器名称')),
                ('model_number', models.CharField(max_length=500, verbose_name='仪器编号')),
                ('maker', models.CharField(max_length=500, verbose_name='厂家')),
                ('type', models.CharField(max_length=500, verbose_name='类别')),
                ('is_lend', models.BooleanField(default=False, verbose_name='是否出借')),
            ],
            options={
                'verbose_name': '实验仪器',
                'verbose_name_plural': '实验仪器',
                'get_latest_by': 'number',
            },
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='实验室名称')),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Department', verbose_name='关联学院')),
            ],
            options={
                'verbose_name': '实验室',
                'verbose_name_plural': '实验室',
            },
        ),
        migrations.AddField(
            model_name='instrument',
            name='lab_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Lab', verbose_name='所属实验室'),
        ),
        migrations.AddField(
            model_name='applyinstrumentlist',
            name='Instrument_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Instrument', verbose_name='仪器'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='belong_lab',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='belongLab', to='user.Lab', verbose_name='所属实验室'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
